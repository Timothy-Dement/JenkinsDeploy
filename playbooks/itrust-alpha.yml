---
- hosts: itrust-alpha

  become: yes

  tasks:

    - name: Pass environment variables
      lineinfile:
        path: "/etc/environment"
        line: "export {{ item }}={{ lookup('env', '{{ item }}') }}"
      with_items:
      - MAIL_USER
      - MAIL_PASSWORD

    - name: Set MySQL root password
      debconf:
        name: mysql-server
        question: mysql-server/root_password
        value: root
        vtype: password

    - name: Confirm MySQL root password
      debconf:
        name: mysql-server
        question: mysql-server/root_password_again
        value: root
        vtype: password

    - name: Install Git, JDK, Maven, MySQL
      apt:
        name: "{{ item }}"
      with_items:
      - git
      - default-jdk
      - maven
      - mysql-server

    - name: Copy itrust-alpha-www source code
      copy:
        src: "/home/ubuntu/deploy/itrust-alpha-www"
        dest: "/home/{{ ansible_user }}/"

    - name: Rename itrust-alpha-www directory
      shell: "mv /home/{{ ansible_user }}/itrust-alpha-www /home/{{ ansible_user }}/iTrust2-v1"

    - name: Rename db.properties.template
      shell: "mv /home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/db.properties.template /home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/db.properties"

    - name: Rename email.properties.template
      shell: "mv /home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/email.properties.template /home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/email.properties"

    - name: Rename hibernate.properties.template
      shell: "mv /home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/resources/hibernate.properties.template /home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/resources/hibernate.properties"

    - name: Update db.properties 'password'
      lineinfile:
        path: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/db.properties"
        regexp: "password"
        line: "password root"

    - name: Update email.properties 'from'
      lineinfile:
        path: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/email.properties"
        regexp: "from"
        line: "from {{ lookup('env', 'MAIL_USER') }}"

    - name: Update email.properties 'username'
      lineinfile:
        path: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/email.properties"
        regexp: "username"
        line: "username {{ lookup('env', 'MAIL_USER') }}"

    - name: Update email.properties 'password'
      lineinfile:
        path: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/java/email.properties"
        regexp: "password"
        line: "password {{ lookup('env', 'MAIL_PASSWORD') }}"

    - name: Update hibernate.properties 'hibernate.connection.password'
      lineinfile:
        path: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2/src/main/resources/hibernate.properties"
        regexp: "hibernate.connection.password ="
        line: "hibernate.connection.password = root"

    - name: Restart MySQL
      service:
        name: mysql
        state: restarted

    - name: Run mvn clean test verify checkstyle:checkstyle
      shell: "mvn clean test verify checkstyle:checkstyle"
      args:
        chdir: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2"

    - name: Run mvn process-test-classes
      shell: "mvn process-test-classes"
      args:
        chdir: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2"

    - name: Run mvn jetty:run
      shell: "nohup bash -c 'sudo mvn jetty:run' &"
      args:
        chdir: "/home/{{ ansible_user }}/iTrust2-v1/iTrust2"
